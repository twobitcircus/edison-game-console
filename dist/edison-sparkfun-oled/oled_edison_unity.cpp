/******************************************************************************
* oled_edison_unity.cpp
* Get game stuff rendering on Edison SparkFun OLED for Unity 3D
* Chris Charlton @ Two Bit Circus
*
* Distributed as-is; no warranty is given.
******************************************************************************/

#include <iostream>
#include "oled/Edison_OLED.h"
#include "gpio/gpio.h"
#include "math.h"
#include <unistd.h> // for usleep
#include <stdlib.h> // Gives us atoi
#include <stdio.h>

using namespace std;

// Function prototypes:
void setupOLED();
void startScreen();
void drawGame();
void drawScore(int score);
void drawGameOver();
void drawBitmap();
void drawBitmapTest();
void cleanUp();

// Define an edOLED object:
edOLED oled;

int playerScore = 0;

/*
static unsigned char intelLogo[] = {
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xf0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f, 0xff, 0xff,
0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xff, 0xfe,
0xf, 0xff, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf, 0xfc,
0x0, 0x0, 0x1f, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3f,
0x80, 0x0, 0x0, 0x1, 0xfc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1,
0xf8, 0x0, 0x0, 0x0, 0x0, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x7, 0xe0, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x38, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xe0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0xe0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xe0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xf0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1e, 0x30, 0x78,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1e, 0x10,
0x78, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1e, 0x0, 0x0, 0x3c, 0x0, 0x0, 0x1e,
0x28, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1e, 0x0, 0x0, 0x3c, 0x0, 0x0,
0x1e, 0x0, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x3c, 0x0,
0x0, 0x1e, 0x0, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x3c,
0x0, 0x0, 0x1e, 0x0, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0,
0x3c, 0x0, 0x70, 0x1e, 0x0, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1c, 0x1e, 0x3f,
0xfc, 0x3f, 0xc3, 0xfc, 0x1e, 0x0, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x1e,
0x3f, 0xfc, 0x3f, 0xc7, 0xfe, 0x1e, 0x0, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38,
0x1e, 0x3f, 0xfe, 0x3f, 0xcf, 0xff, 0x1e, 0x0, 0x7c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x70, 0x1e, 0x3c, 0x1e, 0x3c, 0xf, 0xf, 0x1e, 0x0, 0x78, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x70, 0x1e, 0x3c, 0x1e, 0x3c, 0x1e, 0xf, 0x1e, 0x0, 0x78, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x60, 0x1e, 0x3c, 0x1e, 0x3c, 0x1e, 0x7, 0x9e, 0x0, 0xf8, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0xe0, 0x1e, 0x3c, 0x1e, 0x3c, 0x1f, 0xff, 0x9e, 0x0, 0xf0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0xe0, 0x1e, 0x3c, 0x1e, 0x3c, 0x1f, 0xff, 0x9e, 0x1, 0xf0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x1e, 0x3c, 0x1e, 0x3c, 0x1f, 0xff, 0x9e, 0x3, 0xe0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xc0, 0x1e, 0x3c, 0x1e, 0x3c, 0x1e, 0x0, 0x1e, 0x7,
0xe0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xc0, 0x1e, 0x3c, 0x1e, 0x3c, 0x1e, 0x0, 0x1e,
0xf, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xc0, 0x1e, 0x3c, 0x1e, 0x3c, 0x1e, 0x0,
0x1e, 0x1f, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xc0, 0x1e, 0x3c, 0x1e, 0x3e, 0x1f,
0x6, 0x1e, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xc0, 0x1e, 0x3c, 0x1e, 0x1f,
0xcf, 0xff, 0x1e, 0x3e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xc0, 0x1e, 0x3c, 0x1e,
0x1f, 0xc7, 0xff, 0xe, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xe0, 0xe, 0x3c,
0x1e, 0xf, 0xc3, 0xfe, 0x6, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xe0, 0x2,
0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0xf8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x78, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x7c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x3e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7f, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xff, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f, 0xc0, 0x0, 0x0, 0x0, 0x0, 0xf, 0xff,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x7f,
0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0xfe, 0x0, 0x0, 0x0, 0x7,
0xff, 0xfc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xff, 0xe0, 0x0, 0x0,
0xff, 0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7f, 0xff,
0xff, 0xff, 0xff, 0xfe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f,
0xff, 0xff, 0xff, 0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x3, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x7f, 0xff, 0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x1, 0xff, 0xf8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0
};
*/

// Main
int main(int argc, char * argv[])
{
	// Setup
	setupOLED();

	// Game Over screen (via arguments)
	if (argc == 3) // eg. `<command> null gameover`
	{
		drawGameOver();
	}
	// Update score (via arguments)
	else if (argc == 2) { // eg. `<command> 99`
		playerScore = atoi(argv[1]);
		drawGame(); // Renders the score
	}
	else {
		// Start screen
		startScreen();
	}

/*
	// Play screen
	while (1)
	{
		// playerScore = atoi(argv[1]);
		drawGame(); // Really just does the score
		return 0; // End program (for performance?)
	}
*/

	return 0; // End program
}

void setupOLED()
{
	oled.begin();
	oled.clear(PAGE);
	oled.display();
	oled.setFontType(0);
}


void startScreen()
{
	// Reset game:
	// playerScore = 0;

	// Draw the splash screen:
	oled.clear(PAGE);
	oled.setFontType(0);
	oled.setCursor(2, 5);
	oled.print("PLAY AT:");
	oled.setCursor(2, 13);
	oled.print("");
	oled.setCursor(2, 21);
	oled.print("http://");
	oled.setCursor(2, 30);
	oled.print("edison.");
	oled.setCursor(2, 38);
	oled.print("local:8000");

	// Bitmap test
	// oled.setCursor(0,0);
	// drawBitmapTest();

	// Call display to actually draw it on the OLED:
	oled.display();

	usleep(10000000); // 10 seconds
}

// @TODO: Bitmap draw function
void drawBitmap() {
}

// For testing only: @TODO: DELETE drawBitmapTest()
void drawBitmapTest() {
	//screenmemory
	// oled.print((char)intelLogo);
	// oled.print(intelLogo);
}

// Draw main
void drawGame()
{
	oled.clear(PAGE);
	drawScore(playerScore);
	oled.display();
}

// Draw score on screen
void drawScore(int score)
{
	oled.setFontType(0);
	oled.setCursor(5, 0);
	oled.print("- SCORE -");
	oled.setFontType(2); // Medium size font
	oled.setCursor(5, 15);
	// oled.print(12345); // One line limit (5 digits
	// oled.print(999995432); // character limit for two lines (wrapped; 9 digits)
	oled.print(score);
}

// Draw "Game Over" screen.
void drawGameOver()
{
	oled.clear(PAGE);
	oled.setFontType(1);
	oled.setCursor(5, 5);
	oled.print(" GAME");
	oled.setCursor(5, 25);
	oled.print(" OVER");
	// oled.print("SCORE: ???");
	oled.display();

	usleep(5000000); // 5 sec.
}

void cleanUp()
{
	oled.clear(PAGE);
	oled.display();
}
